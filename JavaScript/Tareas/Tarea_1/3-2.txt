3.2) Agregar un metodo a la clase que agregue un producto al carrito y actualice el
montoTotal agregarProducto(nombre, precio, unidades) { // Completar aca... } 
Ej:agregarProducto("Azucar", 5, 2); 
//Resultado esperado carrito = { montoTotal: 20, productos:
["Leche", "Azucar"] } 3.3)Agregar al ejercicio anterior una validación para no permitir duplicados
e imprimir un mensaje si el item ya existe “ya existe xxx con yyy unidades”


class Carrito {
  constructor(montoTotal = 0, productos = []) {
    this.montoTotal = montoTotal;
    this.productos = productos;
  }

  agregarProducto(nombre, precio, unidades = 1) {
    // Buscar si el producto ya existe en el carrito
    const productoExistente = this.productos.find((p) => p.nombre === nombre);
    
    if (productoExistente) {
      // Si el producto ya existe, imprimir un mensaje y no hacer nada más
      console.log(`Ya existe ${nombre} con ${productoExistente.unidades} unidades`);
      return;
    }

    // Si el producto no existe, crear un nuevo objeto Producto y agregarlo al carrito
    const producto = new Producto(nombre, precio, unidades);
    this.productos.push(producto);

    // Actualizar el monto total del carrito sumando el precio del producto por la cantidad de unidades
    this.montoTotal += precio * unidades;
  }

  eliminarProducto(producto) {
    const index = this.productos.findIndex((p) => p.nombre === producto.nombre);
    if (index !== -1) {
      this.montoTotal -= producto.precio * producto.unidades;
      this.productos.splice(index, 1);
    }
  }
}

class Producto {
  constructor(nombre, precio, unidades = 1) {
    this.nombre = nombre;
    this.precio = precio;
    this.unidades = unidades;
  }
}

// Crear un nuevo carrito
const carrito = new Carrito(10, [new Producto("Leche", 10)]);

// Agregar un producto
carrito.agregarProducto("Pan", 5);
carrito.agregarProducto("Azucar", 5, 2);
carrito.agregarProducto("Leche", 10);

console.log(carrito); 
// Carrito { montoTotal: 25, productos: 
// [Producto { nombre: 'Leche', precio: 10, unidades: 1 },
//  Producto { nombre: 'Pan', precio: 5, unidades: 1 },
//  Producto { nombre: 'Azucar', precio: 5, unidades: 2 }] }




class Carrito {
  constructor(montoTotal = 0, productos = []) {
    this.montoTotal = montoTotal;
    this.productos = productos;
  }

  agregarProducto(nombre, precio, unidades = 1) {
    const index = this.productos.findIndex((p) => p.nombre === nombre);
    
    if (index === -1) {
      this.productos.push({ nombre, precio, unidades });
      this.montoTotal += precio * unidades;
    } else {
      console.log(`Ya existe ${nombre} con ${this.productos[index].unidades} unidades`);
    }
  }

  eliminarProducto(producto) {
    const index = this.productos.findIndex((p) => p.nombre === producto.nombre);
    if (index !== -1) {
      this.montoTotal -= producto.precio * producto.unidades;
      this.productos.splice(index, 1);
    }
  }
}

// Crear un nuevo carrito
const carrito = new Carrito(10, [{ nombre: "Leche", precio: 10 }]);

// Agregar un producto
carrito.agregarProducto("Pan", 5);
carrito.agregarProducto("Azucar", 5, 2);
carrito.agregarProducto("Leche", 10);

console.log(carrito); 
// Carrito { montoTotal: 25, productos: 
// [ { nombre: 'Leche', precio: 10, unidades: 1 },
//   { nombre: 'Pan', precio: 5, unidades: 1 },
//   { nombre: 'Azucar', precio: 5, unidades: 2 } ] }



class Carrito {
  constructor(montoTotal = 0, productos = []) {
    this.montoTotal = montoTotal;
    this.productos = productos;
  }

  agregarProducto(nombre, precio, unidades = 1) {
    const productoExistente = this.productos.find(
      (producto) => producto.nombre === nombre
    );

    if (productoExistente) {
      console.log(
        `Ya existe ${nombre} con ${productoExistente.unidades} unidades`
      );
    } else {
      const nuevoProducto = { nombre, precio, unidades };
      this.productos.push(nuevoProducto);
      this.montoTotal += precio * unidades;
    }
  }

  eliminarProducto(nombre) {
    const productoAEliminar = this.productos.find(
      (producto) => producto.nombre === nombre
    );

    if (productoAEliminar) {
      const indexProductoAEliminar = this.productos.indexOf(
        productoAEliminar
      );
      this.productos.splice(indexProductoAEliminar, 1);
      this.montoTotal -= productoAEliminar.precio * productoAEliminar.unidades;
    }
  }
}

// Crear un nuevo carrito
const carrito = new Carrito(10, [{ nombre: "Leche", precio: 10 }]);

// Agregar un producto
carrito.agregarProducto("Pan", 5);
carrito.agregarProducto("Azucar", 5, 2);
carrito.agregarProducto("Leche", 10);

console.log(carrito);
// Carrito { montoTotal: 25, productos: 
// [ { nombre: 'Leche', precio: 10, unidades: 1 },
//   { nombre: 'Pan', precio: 5, unidades: 1 },
//   { nombre: 'Azucar', precio: 5, unidades: 2 } ] }
